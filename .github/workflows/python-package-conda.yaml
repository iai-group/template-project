name: build

on: [push]

env:
  REPO_NAME: ${{ github.event.repository.name }}

jobs:
  build-and-test:
    if: always()
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v7.0.7

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          architecture: x64
          python-version: 3.9.17
          cache: "pip"
          cache-dependency-path: requirements.txt

      - name: Install Dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          python -m spacy download en_core_web_trf

      - name: Run black
        shell: bash
        run: pre-commit run black --all-files

      - name: Run flake8
        shell: bash
        run: pre-commit run flake8 --all-files

      - name: Run docformatter
        shell: bash
        run: pre-commit run docformatter --all-files

      - name: Run pydocstyle
        shell: bash
        run: pre-commit run pydocstyle --all-files

      - name: Run mypy
        shell: bash
        run: pre-commit run mypy --all-files
   
      - name: Run pytest with code coverage
        run: |
          pytest --junitxml pytest.xml --cov=. --cov-report=term-missing --cov-report=xml:coverage.xml --cov-branch | tee pytest-coverage.txt

      - name: Upload Coverage Results
        uses: actions/upload-artifact@v3
        with:
          name: coverage-results
          path: coverage.xml
        if: ${{ always() }}

      - name: Upload Unit Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: unit-test-py39
          path: pytest.xml

      - name: Upload Unit Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: unit-test-py39
          path: pytest-coverage.txt
          publish-test-results:
  publish-test-results:    
      name: "Publish TestsResults"
      needs: build-and-test
      runs-on: ubuntu-latest
      if: always()
      timeout-minutes: 20

      steps:
        - name: Download Artifacts
          uses: actions/download-artifact@v3
          with:
            name: unit-test-py39
            path: unit-test-py39

        - name: Publish Unit Test Results
          uses: EnricoMi/publish-unit-test-result-action@v1
          with:
            files: unit-test-py39/*.xml

        - name: Download coverage report
          uses: actions/download-artifact@v3
          with:
            name: coverage-results

        - name: Pytest coverage comment in pull-request
          uses: MishaKav/pytest-coverage-comment@main
          with:
            default-branch: main
            pytest-coverage-path: unit-test-py39/pytest-coverage.txt
            junitxml-path: unit-test-py39/pytest.xml
            hide-badge: true
            hide-report: false
            create-new-comment: false
            hide-comment: false
            report-only-changed-files: true